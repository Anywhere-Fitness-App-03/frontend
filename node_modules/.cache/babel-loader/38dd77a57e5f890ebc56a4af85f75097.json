{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from \"./Componet-style\";\nimport accountSchema from './Schema/AccountSchema'; // import axios from \"axios\";\n// import * as yup from \"yup\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = props => {\n  _s();\n\n  // to keep track of your input\n  const [comment, setComment] = useState({\n    name: '',\n    lastName: \"\",\n    //////////\n    email: \"\",\n    password: '',\n    terms: false ///////\n\n  }); // to keep track of our errors\n\n  const [errors, setErrors] = useState({\n    name: '',\n    lastName: \"\",\n    //////////\n    email: \"\",\n    password: '',\n    terms: \"\" ///////\n\n  });\n  const [disabled, setDisabled] = useState(true);\n\n  const changeinput = event => {\n    // event.persist()   /// add this after seting up the error validation\n    const {\n      value,\n      name,\n      type,\n      checked\n    } = event.target;\n    const newValue = type === \"checkbox\" ? checked : value; // validation(name, newValue)   // add this after persist is added\n\n    setComment({ ...comment,\n      [name]: newValue\n    });\n  };\n\n  const submit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'name',\n      children: [\" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": 'name',\n        id: 'name',\n        name: \"name\",\n        onChange: changeinput,\n        value: comment.name,\n        placeholder: 'write your name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: [\" Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"lastName\",\n        name: 'lastName',\n        onChange: changeinput,\n        value: comment.lastName,\n        placeholder: 'tell your your last name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'email',\n      children: [\" Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"email\",\n        id: 'email',\n        name: \"email\",\n        onChange: changeinput,\n        value: comment.email,\n        placeholder: 'Enter your email',\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'password',\n      children: [\" Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"password\",\n        id: 'password',\n        name: \"password\",\n        onChange: changeinput,\n        value: comment.password,\n        type: \"password\",\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'terms',\n      children: [\" Terms and Conditions\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"terms\",\n        type: \"checkbox\",\n        name: \"terms\",\n        checked: comment.terms,\n        value: comment.terms,\n        onChange: changeinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      \"data-cy\": \"submit\",\n      disabled: disabled,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"VlddNEHmEueubcIdgBKf7jWG8f0=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js"],"names":["React","useState","useEffect","Button","accountSchema","Account","props","comment","setComment","name","lastName","email","password","terms","errors","setErrors","disabled","setDisabled","changeinput","event","value","type","checked","target","newValue","submit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button} from \"./Componet-style\";\nimport accountSchema from './Schema/AccountSchema'\n// import axios from \"axios\";\n\n// import * as yup from \"yup\"\n\nconst Account = (props) => {\n\n\n\n\n    // to keep track of your input\n\n    const [comment, setComment] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: false,\n        ///////\n\n    })\n\n    // to keep track of our errors\n\n    const [errors, setErrors] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: \"\",\n        ///////\n\n    })\n\n    const [disabled, setDisabled] = useState(true)\n\n\n\n\n\n    const changeinput = (event) => {\n        // event.persist()   /// add this after seting up the error validation\n        const {value, name, type, checked} = event.target\n        const newValue = type === \"checkbox\" ? checked : value\n        // validation(name, newValue)   // add this after persist is added\n        setComment({...comment, [name]: newValue})\n    }\n\n\n\n    const submit = (event) => {\n        event.preventDefault()\n\n\n    }\n\n\n    return (\n        <form onSubmit={submit}>\n            <label htmlFor={'name'}> Name:\n                <input\n                    data-cy={'name'}\n                    id={'name'}\n                    name=\"name\"\n                    onChange={changeinput}\n                    value={comment.name}\n                    placeholder={'write your name'}\n                />\n\n                {/*after yup is fully finished */}\n\n                {/*{errors.name.length > 0 ? <p className={\"error\"}>{errors.name}</p> : null}*/}\n\n            </label>\n            <label htmlFor={\"lastName\"}> Last Name:\n                <input\n                    data-cy={\"lastName\"}\n                    name={'lastName'}\n                    onChange={changeinput}\n                    value={comment.lastName}\n                    placeholder={'tell your your last name'}\n                />\n                {/*{errors.lastName.length > 0 ? <p className={\"error\"}>{errors.lastName}</p> : null}*/}\n            </label>\n\n            {/*/////////////////////////////////////////////////// email password and checkbox   //////////////////////////*/}\n\n            <label htmlFor={'email'}> Email\n                <input\n                    data-cy={\"email\"}\n                    id={'email'}\n                    name=\"email\"\n                    onChange={changeinput}\n                    value={comment.email}\n                    placeholder={'Enter your email'}\n                    type=\"email\"\n                />\n                {/*{errors.email.length > 0 ? <p className={\"error\"}>{errors.email}</p> : null}*/}\n            </label>\n\n            <label htmlFor={'password'}> Password\n                <input\n                    data-cy={\"password\"}\n                    id={'password'}\n                    name=\"password\"\n                    onChange={changeinput}\n                    value={comment.password}\n                    type={\"password\"} placeholder={\"Enter your password\"}\n                />\n                {/*{errors.password.length > 0 ? <p className={\"error\"}>{errors.password}</p> : null}*/}\n            </label>\n\n            <label htmlFor={'terms'}> Terms and Conditions\n\n                <input\n                    data-cy={\"terms\"}\n                    type=\"checkbox\"\n                    name=\"terms\"\n                    checked={comment.terms}\n                    value={comment.terms}\n                    onChange={changeinput}\n                />\n                {/*{errors.terms.length > 0 ? <p className={\"error\"}>{errors.terms}</p> : null}*/}\n            </label>\n\n\n            {/*/////////////////////////////////////////////////// end  ///////////////////////////////////////////////////*/}\n\n            {/*<pre className={'error'}>{JSON.stringify(postError, null, 2)}</pre>*/}\n            {/*// to show the error from error .catch i  axios*/}\n\n            <Button type={\"danger\"} data-cy={\"submit\"} disabled={disabled}>submit</Button>\n\n\n        </form>\n    )\n\n\n}\nexport default Account"]},"metadata":{},"sourceType":"module"}