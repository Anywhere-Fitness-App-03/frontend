{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from \"./Componet-style\";\nimport AccountSchema from './Schema/AccountSchema';\nimport * as yup from 'yup';\nimport axios from \"axios\"; // import * as yup from \"yup\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = props => {\n  _s();\n\n  // to keep track of your input\n  const [info, setInfo] = useState({\n    name: '',\n    lastName: \"\",\n    //////////\n    email: \"\",\n    password: '',\n    terms: false ///////\n\n  }); // to keep track of our errors\n\n  const [errors, setErrors] = useState({\n    name: '',\n    lastName: \"\",\n    //////////\n    email: \"\",\n    password: '',\n    terms: \"\" ///////\n\n  });\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => AccountSchema.isValid(info).then(valid => {\n    setDisabled(!valid);\n  })[info]);\n\n  const validation = (name, value) => {\n    // const {value,name} = e.target // look at the event which is our name and look at the names\n    yup.reach(AccountSchema, name).validate(value).then(valid => {\n      setErrors({ ...errors,\n        [name]: ''\n      }); // clearing error if user did the right thing\n    }).catch(err => {\n      // console.log(err)   /// this tell our   schema set errors\n      setErrors({ ...errors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const changeinput = event => {\n    event.persist();\n    const {\n      value,\n      name,\n      type,\n      checked\n    } = event.target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    validation(name, newValue);\n    setInfo({ ...info,\n      [name]: newValue\n    });\n  };\n\n  const submit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'name',\n      children: [\" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": 'name',\n        id: 'name',\n        name: \"name\",\n        onChange: changeinput,\n        value: info.name,\n        placeholder: 'write your name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), errors.name.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 43\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: [\" Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"lastName\",\n        name: 'lastName',\n        onChange: changeinput,\n        value: info.lastName,\n        placeholder: 'tell your your last name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), errors.lastName.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 47\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'email',\n      children: [\" Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"email\",\n        id: 'email',\n        name: \"email\",\n        onChange: changeinput,\n        value: info.email,\n        placeholder: 'Enter your email',\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), errors.email.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 44\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'password',\n      children: [\" Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"password\",\n        id: 'password',\n        name: \"password\",\n        onChange: changeinput,\n        value: info.password,\n        type: \"password\",\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), errors.password.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 47\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'terms',\n      children: [\" Terms and Conditions\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-cy\": \"terms\",\n        type: \"checkbox\",\n        name: \"terms\",\n        checked: info.terms,\n        value: info.terms,\n        onChange: changeinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), errors.terms.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.terms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 44\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"danger\",\n      \"data-cy\": \"submit\",\n      disabled: disabled,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"VWC/pORe0CZa5D4YZCeiq2nNm5I=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js"],"names":["React","useState","useEffect","Button","AccountSchema","yup","axios","Account","props","info","setInfo","name","lastName","email","password","terms","errors","setErrors","disabled","setDisabled","isValid","then","valid","validation","value","reach","validate","catch","err","changeinput","event","persist","type","checked","target","newValue","submit","preventDefault","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button} from \"./Componet-style\";\nimport AccountSchema from './Schema/AccountSchema'\nimport * as yup from 'yup'\nimport axios from \"axios\";\n\n// import * as yup from \"yup\"\n\nconst Account = (props) => {\n\n\n\n\n    // to keep track of your input\n\n    const [info, setInfo] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: false,\n        ///////\n\n    })\n\n    // to keep track of our errors\n\n    const [errors, setErrors] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: \"\",\n        ///////\n\n    })\n\n    const [disabled, setDisabled] = useState(true)\n\nuseEffect(()=>AccountSchema.isValid(info).then(valid => {\n    setDisabled(!valid)\n})[info])\n\n    const validation = (name, value) => {\n        // const {value,name} = e.target // look at the event which is our name and look at the names\n        yup.reach(AccountSchema, name).validate(value).then(valid => {\n            setErrors({...errors, [name]: ''}) // clearing error if user did the right thing\n        }).catch(err => {\n            // console.log(err)   /// this tell our   schema set errors\n            setErrors({\n                ...errors, [name]: err.errors[0]\n            })\n        });\n    };\n\n    const changeinput = (event) => {\n        event.persist()\n        const {value, name, type, checked} = event.target\n        const newValue = type === \"checkbox\" ? checked : value\n        validation(name, newValue)\n        setInfo({...info, [name]: newValue})\n    }\n\n\n\n    const submit = (event) => {\n        event.preventDefault()\n\n\n    }\n\n\n    return (\n        <form onSubmit={submit}>\n            <label htmlFor={'name'}> Name:\n                <input\n                    data-cy={'name'}\n                    id={'name'}\n                    name=\"name\"\n                    onChange={changeinput}\n                    value={info.name}\n                    placeholder={'write your name'}\n                />\n\n                {/*after yup is fully finished */}\n\n                {errors.name.length > 0 ? <p className={\"error\"}>{errors.name}</p> : null}\n\n            </label>\n            <label htmlFor={\"lastName\"}> Last Name:\n                <input\n                    data-cy={\"lastName\"}\n                    name={'lastName'}\n                    onChange={changeinput}\n                    value={info.lastName}\n                    placeholder={'tell your your last name'}\n                />\n                {errors.lastName.length > 0 ? <p className={\"error\"}>{errors.lastName}</p> : null}\n            </label>\n\n            {/*/////////////////////////////////////////////////// email password and checkbox   //////////////////////////*/}\n\n            <label htmlFor={'email'}> Email\n                <input\n                    data-cy={\"email\"}\n                    id={'email'}\n                    name=\"email\"\n                    onChange={changeinput}\n                    value={info.email}\n                    placeholder={'Enter your email'}\n                    type=\"email\"\n                />\n                {errors.email.length > 0 ? <p className={\"error\"}>{errors.email}</p> : null}\n            </label>\n\n            <label htmlFor={'password'}> Password\n                <input\n                    data-cy={\"password\"}\n                    id={'password'}\n                    name=\"password\"\n                    onChange={changeinput}\n                    value={info.password}\n                    type={\"password\"} placeholder={\"Enter your password\"}\n                />\n                {errors.password.length > 0 ? <p className={\"error\"}>{errors.password}</p> : null}\n            </label>\n\n            <label htmlFor={'terms'}> Terms and Conditions\n\n                <input\n                    data-cy={\"terms\"}\n                    type=\"checkbox\"\n                    name=\"terms\"\n                    checked={info.terms}\n                    value={info.terms}\n                    onChange={changeinput}\n                />\n                {errors.terms.length > 0 ? <p className={\"error\"}>{errors.terms}</p> : null}\n            </label>\n\n\n\n\n            <button type={\"danger\"} data-cy={\"submit\"} disabled={disabled}>submit</button>\n\n\n        </form>\n    )\n\n\n}\nexport default Account"]},"metadata":{},"sourceType":"module"}