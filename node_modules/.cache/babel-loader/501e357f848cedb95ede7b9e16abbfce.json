{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { loginSchema } from './Schema/loginSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorMassage = ' Login was successful please try again';\n\nconst Login = () => {\n  _s();\n\n  const [login, setLogin] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const [disabled, setDisabled] = useState(true);\n  const [axiosSuccess, setAxiosSuccess] = useState();\n  const [axiosFail, setAxiosFail] = useState();\n  useEffect(() => {\n    loginSchema.isValid(login).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [login]);\n\n  const validation = (name, value) => {\n    yup.reach(loginSchema, name).validate(value).then(response => {\n      setErrors({ ...errors,\n        [name]: ''\n      });\n    }).catch(err => setErrors({ ...errors,\n      [name]: err.error[0]\n    }));\n  };\n\n  const change = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    validation(value, name);\n    setLogin({ ...login,\n      [name]: value\n    });\n  };\n\n  const submit = event => {\n    event.preventDefault();\n    axios.post(\"changeMeLater.com\", login).then(response => {\n      setAxiosSuccess(response.data);\n      setLogin({\n        email: '',\n        password: ''\n      });\n    }).catch(error => {\n      setLogin({\n        email: '',\n        password: ''\n      });\n      setAxiosFail(errorMassage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 'email',\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: login.email,\n          onChange: change,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 'password',\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: login.password,\n          onChange: change,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabled,\n        type: 'submit',\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), axiosFail === errorMassage ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"errorMassage\",\n        children: [\" \", errorMassage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"7hfTB+3609qzZZmOd9aRMVpXP5M=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ehsan/Desktop/lambda Build/frontend/src/components/Login.js"],"names":["React","useEffect","useState","axios","yup","loginSchema","errorMassage","Login","login","setLogin","email","password","errors","setErrors","disabled","setDisabled","axiosSuccess","setAxiosSuccess","axiosFail","setAxiosFail","isValid","then","valid","validation","name","value","reach","validate","response","catch","err","error","change","event","target","submit","preventDefault","post","data"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport {loginSchema} from './Schema/loginSchema'\n\nconst errorMassage =' Login was successful please try again'\nconst Login = () => {\n    const [login,setLogin] = useState({\n        email:'',\n        password:''\n    })\n    const [errors,setErrors] = useState({\n        email:'',\n        password:''\n    })\n\n    const [disabled,setDisabled] = useState(true)\n    const [axiosSuccess , setAxiosSuccess] = useState()\n    const  [axiosFail ,setAxiosFail] = useState()\n\n    useEffect(()=>{\n        loginSchema.isValid(login).then(valid => {\n            setDisabled(!valid)\n        })\n    },[login])\n\n    const validation = (name,value) => {\n        yup.reach(loginSchema,name).validate(value).then(response => {\n            setErrors({...errors ,[name]:''})})\n            .catch(err => setErrors({...errors,[name]: err.error[0]} ))\n\n\n    }\n\n\nconst change = (event) => {\n        const {value, name} =event.target\n    validation(value,name)\n    setLogin({...login,[name]:value})\n\n    }\n\n    const  submit = (event)=> {\n        event.preventDefault()\n        axios.post(\"changeMeLater.com\",login)\n            .then(response => {\n                setAxiosSuccess(response.data)\n                setLogin({ email:'', password:''})\n            })\n            .catch(error => {\n                setLogin({ email:'', password:''})\n                setAxiosFail(errorMassage)})\n    }\n    return (\n        <div className={\"login\"} >\n     <form onSubmit={submit}>\n         <label htmlFor={'email'}>\n             Email:\n             <input type=\"email\" name=\"email\" value={login.email} onChange={change} placeholder={\"Enter your email\"}/>\n         </label>\n         {/*{errors.email.length > 0? <p className={'error'}>{errors.email}</p>:null}*/}\n<br/>\n         <label htmlFor={'password'}>\n             Password:\n             <input type=\"password\" name=\"password\" value={login.password} onChange={change} placeholder={\"Enter your password\"}/>\n         </label>\n <br/>\n         <button disabled={disabled} type={'submit'}>Login</button>\n         {axiosFail=== errorMassage? <h3 className={\"errorMassage\"}> {errorMassage}</h3> :null}\n\n     </form>\n        </div>\n    )\n\n}\nexport default  Login"]},"metadata":{},"sourceType":"module"}