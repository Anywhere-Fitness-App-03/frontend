[{"/Users/ehsan/Desktop/build/frontend/src/index.js":"1","/Users/ehsan/Desktop/build/frontend/src/App.js":"2","/Users/ehsan/Desktop/build/frontend/src/reportWebVitals.js":"3","/Users/ehsan/Desktop/build/frontend/src/components/Home.js":"4","/Users/ehsan/Desktop/build/frontend/src/components/ClientForm.js":"5","/Users/ehsan/Desktop/build/frontend/src/components/About.js":"6","/Users/ehsan/Desktop/build/frontend/src/components/Account.js":"7","/Users/ehsan/Desktop/build/frontend/src/components/Login.js":"8","/Users/ehsan/Desktop/build/frontend/src/components/Componet-style.js":"9","/Users/ehsan/Desktop/build/frontend/src/components/Schema/AccountSchema.js":"10","/Users/ehsan/Desktop/build/frontend/src/components/Schema/LoginSchema.js":"11","/Users/ehsan/Desktop/build/frontend/src/components/WelcomePage.js":"12","/Users/ehsan/Desktop/build/frontend/src/components/HeroSection/index.js":"13","/Users/ehsan/Desktop/build/frontend/src/components/HeroSection/HeroElements.js":"14"},{"size":592,"mtime":1629745267557,"results":"15","hashOfConfig":"16"},{"size":1189,"mtime":1629808932480,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1629739176372,"results":"18","hashOfConfig":"16"},{"size":327,"mtime":1629934666944,"results":"19","hashOfConfig":"16"},{"size":1676,"mtime":1629743698125,"results":"20","hashOfConfig":"16"},{"size":132,"mtime":1629771020488,"results":"21","hashOfConfig":"16"},{"size":5007,"mtime":1629811386914,"results":"22","hashOfConfig":"16"},{"size":2956,"mtime":1629863303687,"results":"23","hashOfConfig":"16"},{"size":562,"mtime":1629776425986,"results":"24","hashOfConfig":"16"},{"size":851,"mtime":1629773241991,"results":"25","hashOfConfig":"16"},{"size":292,"mtime":1629773291069,"results":"26","hashOfConfig":"16"},{"size":139,"mtime":1629808553597,"results":"27","hashOfConfig":"16"},{"size":636,"mtime":1629935047202,"results":"28","hashOfConfig":"16"},{"size":587,"mtime":1629933404501,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jkasgj",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ehsan/Desktop/build/frontend/src/index.js",[],["63","64"],"/Users/ehsan/Desktop/build/frontend/src/App.js",["65"],"\nimport './App.css';\nimport {Link,Route,Switch} from 'react-router-dom'\nimport ClientForm from './components/ClientForm'\nimport Home from './components/Home.js'\nimport Account from './components/Account'\nimport Login from './components/Login'\nimport About from './components/About'\nimport  Welcome from  './components/WelcomePage'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <nav>\n            <h2 className={\"fitness-header\"}>\n                <Link to=\"/\">Anywhere Fitness</Link>\n            </h2>\n            <div className={\"nav-link\"}>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/login\">Log in</Link>\n            </div>\n        </nav>\n\n        <Switch>\n            <Route path='/login/welcome' component={Welcome}/>\n            {/*<Route path='/account/welcome' component={Welcome}/>*/}\n            <Route path={'/login'}  component={Login} />\n            <Route path={'/account'}  component={Account} />\n            <Route path={'/about'}  component={About} />\n            <Route path={'/'}  component={Home} />\n\n\n\n        </Switch>\n\n{/*<ClientForm/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ehsan/Desktop/build/frontend/src/reportWebVitals.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/Home.js",["66","67"],"import React from 'react';\n// import { useHistory } from 'react-router-dom'\nimport {Button} from \"./Componet-style\";\nimport {Link} from \"react-router-dom\";\nimport HeroSection from './HeroSection/index';\n\nconst Home = (props) => {\n    console.log('home', props)\n    return (\n\n        <HeroSection/>\n\n    )\n\n}\nexport default Home","/Users/ehsan/Desktop/build/frontend/src/components/ClientForm.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/About.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/Account.js",["68","69"],"import React, {useState, useEffect} from 'react';\nimport {Button} from \"./Componet-style\";\nimport AccountSchema from './Schema/AccountSchema'\nimport * as yup from 'yup'\nimport axios from \"axios\";\n// import * as yup from \"yup\"\n\n\nconst errorMassage ='please try again the creation of account was not successful'\nconst Account = (props) => {\n\n\n\n\n    // to keep track of your input\n\n    const [info, setInfo] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: false,\n        ///////\n\n    })\n\n    // to keep track of our errors\n\n    const [errors, setErrors] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: \"\",\n        ///////\n\n    })\n\n    const [axiosSuccess , setAxiosSuccess] = useState()\n    const  [axiosFail ,setAxiosFail] = useState()\n\n    const [disabled, setDisabled] = useState(true)\n\nuseEffect(()=>AccountSchema.isValid(info).then(valid => {\n    setDisabled(!valid)\n})[info])\n\n    const validation = (name, value) => {\n\n        yup.reach(AccountSchema, name).validate(value).then(valid => {\n            setErrors({...errors, [name]: ''})\n        }).catch(err => {\n\n            setErrors({\n                ...errors, [name]: err.errors[0]\n            })\n        });\n    };\n\n    const changeinput = (event) => {\n        event.persist()\n        const {value, name, type, checked} = event.target\n        const newValue = type === \"checkbox\" ? checked : value\n        validation(name, newValue)\n        setInfo({...info, [name]: newValue})\n    }\n\n\n\n    const submit = (event) => {\n        event.preventDefault()\n        axios.post(\"www.changeMeLater.com\", info)\n            .then(response => {axiosSuccess(response.data)\n                setInfo({name: '', lastName: \"\", email: \"\",password: '',terms: false,})})\n            .catch(err => {\n                setInfo({name: '', lastName: \"\", email: \"\",password: '',terms: false,})\n                    setAxiosFail(errorMassage)\n\n                }\n\n            )\n        props.history.push('/login', {email:info.email})\n        // console.log(axiosFail)\n    }\n\n\n\n    return (\n        <form onSubmit={submit}>\n            <label htmlFor={'name'}> Name:\n                <input\n                    data-cy={'name'}\n                    id={'name'}\n                    name=\"name\"\n                    onChange={changeinput}\n                    value={info.name}\n                    placeholder={'write your name'}\n                />\n\n                {/*after yup is fully finished */}\n\n                {errors.name.length > 0 ? <p className={\"error\"}>{errors.name}</p> : null}\n\n            </label>\n            <label htmlFor={\"lastName\"}> Last Name:\n                <input\n                    data-cy={\"lastName\"}\n                    name={'lastName'}\n                    onChange={changeinput}\n                    value={info.lastName}\n                    placeholder={'tell your your last name'}\n                />\n                {errors.lastName.length > 0 ? <p className={\"error\"}>{errors.lastName}</p> : null}\n            </label>\n\n            {/*/////////////////////////////////////////////////// email password and checkbox   //////////////////////////*/}\n\n            <label htmlFor={'email'}> Email\n                <input\n                    data-cy={\"email\"}\n                    id={'email'}\n                    name=\"email\"\n                    onChange={changeinput}\n                    value={info.email}\n                    placeholder={'Enter your email'}\n                    type=\"email\"\n                />\n                {errors.email.length > 0 ? <p className={\"error\"}>{errors.email}</p> : null}\n            </label>\n\n            <label htmlFor={'password'}> Password\n                <input\n                    data-cy={\"password\"}\n                    id={'password'}\n                    name=\"password\"\n                    onChange={changeinput}\n                    value={info.password}\n                    type={\"password\"} placeholder={\"Enter your password\"}\n                />\n                {errors.password.length > 0 ? <p className={\"error\"}>{errors.password}</p> : null}\n            </label>\n\n            <label htmlFor={'terms'}> Terms and Conditions\n\n                <input\n                    data-cy={\"terms\"}\n                    type=\"checkbox\"\n                    name=\"terms\"\n                    checked={info.terms}\n                    value={info.terms}\n                    onChange={changeinput}\n                />\n                {errors.terms.length > 0 ? <p className={\"error\"}>{errors.terms}</p> : null}\n            </label>\n\n\n\n\n            <button  data-cy={\"submit\"} disabled={disabled}>submit</button>\n            <br/>\n            {axiosFail=== errorMassage? <h3 className={\"errorMassage\"}> {errorMassage}</h3> :null}\n            {/*{info.name.length > 0  ? setAxiosFail(null): setAxiosFail(()=>axiosFail)}*/}\n\n        </form>\n    )\n\n\n}\nexport default Account","/Users/ehsan/Desktop/build/frontend/src/components/Login.js",["70","71","72"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport LoginSchema from './Schema/LoginSchema'\nimport {Link, useHistory} from \"react-router-dom\";\n\nconst errorMassage =' Login was not successful please try again'\nconst Login = (props) => {\n\n    const [login,setLogin] = useState({\n        email:'',\n        password:''\n    })\n    const [errors,setErrors] = useState({\n        email:'',\n        password:''\n    })\n\n    const [disabled,setDisabled] = useState(true)\n    const [axiosSuccess , setAxiosSuccess] = useState()\n    const  [axiosFail ,setAxiosFail] = useState()\n\n\n    useEffect(()=>{\n        LoginSchema.isValid(login).then(valid => {\n            setDisabled(!valid)\n        })\n    },[login])\n\n\n    const validateChange = e => {\n        yup\n            .reach(LoginSchema, e.target.name) // get the value out of schema at key \"e.target.name\" --> \"name=\"\n            .validate(e.target.value) // value in input\n            .then(valid => {\n                setErrors({ ...errors, [e.target.name]: \"\" });\n            })\n            .catch(err => {\n                // if failing validation, set error in state\n                console.log(\"error!\", err);\n                setErrors({ ...errors, [e.target.name]: err.errors[0] });\n            });\n    };\n\n\nconst attachWelcome = (address) => {\n    props.history.push(address);\n}\n\nconst change = (event) => {\n    event.persist()\n        const {value, name} =event.target\n    validateChange(event)\n    setLogin({...login,[name]:value})\n\n    }\n\n    const  submit = (event)=> {\n        event.preventDefault()\n        axios.post(\"www.cahngeME.com\",login)\n            .then(response => {\n                setAxiosSuccess(response.data)\n                setLogin({ email:'', password:''})\n                attachWelcome(\"/login/welcome\")\n            })\n            .catch(error => {\n                setLogin({ email:'', password:''})\n                setAxiosFail(errorMassage)})\n    }\n    return (\n        <div className={\"login\"} >\n\n     <form onSubmit={submit}>\n         <label htmlFor={'email'}>\n             Email:\n             <input type=\"email\" name=\"email\" value={login.email} onChange={change} placeholder={\"Enter your email\"}/>\n         </label>\n         {errors.email.length > 0? <p className={'error'}>{errors.email}</p>:null}\n<br/>\n         <label htmlFor={'password'}>\n             Password:\n             <input type=\"password\" name=\"password\" value={login.password} onChange={change} placeholder={\"Enter your password\"}/>\n         </label>\n         {errors.password.length > 0? <p className={'error'}>{errors.password}</p>:null}\n <br/>\n         {/*<Link to=\"/account\">*/}\n         <button disabled={disabled} type={'submit'} onClick={attachWelcome}>Login</button>\n         {/*</Link>*/}\n         {axiosFail=== errorMassage? <h3 className={\"errorMassage\"}> {errorMassage}</h3> :null}\n\n     </form>\n            </div>\n\n    )\n\n}\nexport default  Login","/Users/ehsan/Desktop/build/frontend/src/components/Componet-style.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/Schema/AccountSchema.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/Schema/LoginSchema.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/WelcomePage.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/HeroSection/index.js",[],"/Users/ehsan/Desktop/build/frontend/src/components/HeroSection/HeroElements.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"82","line":4,"column":9,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"81","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":15},{"ruleId":"77","severity":1,"message":"83","line":41,"column":27,"nodeType":"79","messageId":"80","endLine":41,"endColumn":42},{"ruleId":"77","severity":1,"message":"82","line":5,"column":9,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"84","line":5,"column":15,"nodeType":"79","messageId":"80","endLine":5,"endColumn":25},{"ruleId":"77","severity":1,"message":"85","line":20,"column":12,"nodeType":"79","messageId":"80","endLine":20,"endColumn":24},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'ClientForm' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","'setAxiosSuccess' is assigned a value but never used.","'useHistory' is defined but never used.","'axiosSuccess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]