[{"/Users/ehsan/Desktop/lambda Build/frontend/src/index.js":"1","/Users/ehsan/Desktop/lambda Build/frontend/src/App.js":"2","/Users/ehsan/Desktop/lambda Build/frontend/src/reportWebVitals.js":"3","/Users/ehsan/Desktop/lambda Build/frontend/src/components/ClientForm.js":"4","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Home.js":"5","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Componet-style.js":"6","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js":"7","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Schema/AccountSchema.js":"8","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Login.js":"9","/Users/ehsan/Desktop/lambda Build/frontend/src/components/About.js":"10","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Schema/LoginSchema.js":"11"},{"size":592,"mtime":1629745267557,"results":"12","hashOfConfig":"13"},{"size":1010,"mtime":1629771126087,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1629739176372,"results":"15","hashOfConfig":"13"},{"size":1676,"mtime":1629743698125,"results":"16","hashOfConfig":"13"},{"size":538,"mtime":1629749413231,"results":"17","hashOfConfig":"13"},{"size":522,"mtime":1629765844731,"results":"18","hashOfConfig":"13"},{"size":4945,"mtime":1629768905431,"results":"19","hashOfConfig":"13"},{"size":851,"mtime":1629773241991,"results":"20","hashOfConfig":"13"},{"size":2692,"mtime":1629774270192,"results":"21","hashOfConfig":"13"},{"size":132,"mtime":1629771020488,"results":"22","hashOfConfig":"13"},{"size":292,"mtime":1629773291069,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"175mqbf",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ehsan/Desktop/lambda Build/frontend/src/index.js",[],["48","49"],"/Users/ehsan/Desktop/lambda Build/frontend/src/App.js",["50"],"/Users/ehsan/Desktop/lambda Build/frontend/src/reportWebVitals.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/ClientForm.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Home.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Componet-style.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Account.js",["51","52"],"import React, {useState, useEffect} from 'react';\nimport {Button} from \"./Componet-style\";\nimport AccountSchema from './Schema/AccountSchema'\nimport * as yup from 'yup'\nimport axios from \"axios\";\n// import * as yup from \"yup\"\n\n\nconst errorMassage ='please try again the creation of account was not successful'\nconst Account = (props) => {\n\n\n\n\n    // to keep track of your input\n\n    const [info, setInfo] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: false,\n        ///////\n\n    })\n\n    // to keep track of our errors\n\n    const [errors, setErrors] = useState({\n        name: '',\n        lastName: \"\",\n        //////////\n        email: \"\",\n        password: '',\n        terms: \"\",\n        ///////\n\n    })\n\n    const [axiosSuccess , setAxiosSuccess] = useState()\n    const  [axiosFail ,setAxiosFail] = useState()\n\n    const [disabled, setDisabled] = useState(true)\n\nuseEffect(()=>AccountSchema.isValid(info).then(valid => {\n    setDisabled(!valid)\n})[info])\n\n    const validation = (name, value) => {\n\n        yup.reach(AccountSchema, name).validate(value).then(valid => {\n            setErrors({...errors, [name]: ''})\n        }).catch(err => {\n\n            setErrors({\n                ...errors, [name]: err.errors[0]\n            })\n        });\n    };\n\n    const changeinput = (event) => {\n        event.persist()\n        const {value, name, type, checked} = event.target\n        const newValue = type === \"checkbox\" ? checked : value\n        validation(name, newValue)\n        setInfo({...info, [name]: newValue})\n    }\n\n\n\n    const submit = (event) => {\n        event.preventDefault()\n        axios.post(\"adddresthatwegiveit\", info)\n            .then(response => {axiosSuccess(response.data)\n                setInfo({name: '', lastName: \"\", email: \"\",password: '',terms: false,})})\n            .catch(err => {\n                setInfo({name: '', lastName: \"\", email: \"\",password: '',terms: false,})\n                    setAxiosFail(errorMassage)\n\n                }\n\n            )\n        console.log(axiosFail)\n    }\n\n\n\n    return (\n        <form onSubmit={submit}>\n            <label htmlFor={'name'}> Name:\n                <input\n                    data-cy={'name'}\n                    id={'name'}\n                    name=\"name\"\n                    onChange={changeinput}\n                    value={info.name}\n                    placeholder={'write your name'}\n                />\n\n                {/*after yup is fully finished */}\n\n                {errors.name.length > 0 ? <p className={\"error\"}>{errors.name}</p> : null}\n\n            </label>\n            <label htmlFor={\"lastName\"}> Last Name:\n                <input\n                    data-cy={\"lastName\"}\n                    name={'lastName'}\n                    onChange={changeinput}\n                    value={info.lastName}\n                    placeholder={'tell your your last name'}\n                />\n                {errors.lastName.length > 0 ? <p className={\"error\"}>{errors.lastName}</p> : null}\n            </label>\n\n            {/*/////////////////////////////////////////////////// email password and checkbox   //////////////////////////*/}\n\n            <label htmlFor={'email'}> Email\n                <input\n                    data-cy={\"email\"}\n                    id={'email'}\n                    name=\"email\"\n                    onChange={changeinput}\n                    value={info.email}\n                    placeholder={'Enter your email'}\n                    type=\"email\"\n                />\n                {errors.email.length > 0 ? <p className={\"error\"}>{errors.email}</p> : null}\n            </label>\n\n            <label htmlFor={'password'}> Password\n                <input\n                    data-cy={\"password\"}\n                    id={'password'}\n                    name=\"password\"\n                    onChange={changeinput}\n                    value={info.password}\n                    type={\"password\"} placeholder={\"Enter your password\"}\n                />\n                {errors.password.length > 0 ? <p className={\"error\"}>{errors.password}</p> : null}\n            </label>\n\n            <label htmlFor={'terms'}> Terms and Conditions\n\n                <input\n                    data-cy={\"terms\"}\n                    type=\"checkbox\"\n                    name=\"terms\"\n                    checked={info.terms}\n                    value={info.terms}\n                    onChange={changeinput}\n                />\n                {errors.terms.length > 0 ? <p className={\"error\"}>{errors.terms}</p> : null}\n            </label>\n\n\n\n\n            <button  data-cy={\"submit\"} disabled={disabled}>submit</button>\n            <br/>\n            {axiosFail=== errorMassage? <h3 className={\"errorMassage\"}> {errorMassage}</h3> :null}\n            {/*{info.name.length > 0  ? setAxiosFail(null): setAxiosFail(()=>axiosFail)}*/}\n\n        </form>\n    )\n\n\n}\nexport default Account","/Users/ehsan/Desktop/lambda Build/frontend/src/components/Schema/AccountSchema.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Login.js",["53"],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/About.js",[],"/Users/ehsan/Desktop/lambda Build/frontend/src/components/Schema/LoginSchema.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":2,"column":9,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"63","line":41,"column":27,"nodeType":"60","messageId":"61","endLine":41,"endColumn":42},{"ruleId":"58","severity":1,"message":"64","line":19,"column":12,"nodeType":"60","messageId":"61","endLine":19,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ClientForm' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'setAxiosSuccess' is assigned a value but never used.","'axiosSuccess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]